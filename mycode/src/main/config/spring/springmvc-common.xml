<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
   <!-- 上传图片 -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大上传尺寸 B 1M -->
        <property name="maxUploadSize" value="1048576"></property>
   </bean>
   
   <!-- 动态加载properties -->
   <!-- <bean id="remessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:properties/mybatis</value>
            </list>
        </property>
   </bean> -->
   <!-- 初始化加载 -->
   <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" >-->
        <!--<property name="basenames">-->
            <!--<list>-->
                <!--<value>properties/common</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean> -->
    <!--<bean id="messageSourceHelper" class="com.fly.dd.mycode.common.utils.MessageSourceHelper">-->
        <!--<property name="messageSource">-->
            <!--<ref bean="messageSource"/>-->
        <!--</property>-->
    <!--</bean>    -->
   
   <!-- 配置使用 SimpleMappingExceptionResolver 来映射异常 -->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionAttribute" value="ex"></property>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.core.userdetails.UsernameNotFoundException">unamenotfind</prop>
            </props>
        </property>
    </bean> -->
    
    <!-- 使用ehcache缓存 -->
    <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager"></property>
        <property name="transactionAware" value="true"></property>
    </bean>


    <!-- 使用redis缓存 -->
    <!-- redis 相关配置 -->
    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxIdle" value="${redis.pool.maxIdle}" />-->
        <!--<property name="maxTotal" value="${redis.pool.maxActive}" />-->
        <!--<property name="maxWaitMillis" value="${redis.pool.maxWait}" />-->
        <!--<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />-->
    <!--</bean>-->
    <!--<bean id="jedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="hostName" value="${redis.host}" />-->
        <!--<property name="port" value="${redis.port}" />-->
        <!--<property name="password" value="${redis.password}" />-->
        <!--<property name="timeout" value="${redis.timeout}" />-->
        <!--<property name="usePool" value="true" />-->
        <!--<property name="poolConfig" ref="poolConfig" />-->
    <!--</bean>-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <!--<property name="valueSerializer">-->
            <!--<bean-->
                    <!--class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash; 配置缓存 &ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--<constructor-arg ref="redisTemplate" />-->
    <!--</bean>-->


    <!-- 启动cache注解 -->
    <cache:annotation-driven cache-manager="cacheManager" />
    
    
</beans>
